{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\V\\\\Desktop\\\\TESLA\\\\src\\\\comps\\\\Many_Fields.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Many_Fields = ({\n  fields\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fields.map((item, index) => {\n      const id = item.label.replace(/\\s+/g, \"-\").toLowerCase();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: id,\n          className: \"label\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1\",\n          children: item.type === \"textarea\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"field min-h-[120px]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }, this) : item.type === \"select\" ? /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"field\",\n            children: item.options.map((option, index) => {\n              let isSelected = false;\n              if (item.label === \"Contact Preference\") {\n                if (isMobile) {\n                  isSelected = index === 0;\n                } else {\n                  isSelected = index === 1;\n                }\n              }\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: isSelected,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            id: id,\n            type: item.type,\n            className: \"field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_c = Many_Fields;\nexport default Many_Fields;\nvar _c;\n$RefreshReg$(_c, \"Many_Fields\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Many_Fields","fields","children","map","item","index","id","label","replace","toLowerCase","htmlFor","className","fileName","_jsxFileName","lineNumber","columnNumber","type","options","option","isSelected","isMobile","selected","_c","$RefreshReg$"],"sources":["C:/Users/V/Desktop/TESLA/src/comps/Many_Fields.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Many_Fields = ({ fields }) => {\r\n  return (\r\n    <>\r\n      {fields.map((item, index) => {\r\n        const id = item.label.replace(/\\s+/g, \"-\").toLowerCase();\r\n        return (\r\n          <div key={index}>\r\n            <label htmlFor={id} className=\"label\">\r\n              {item.label}\r\n            </label>\r\n            <div className=\"mt-1\">\r\n              {item.type === \"textarea\" ? (\r\n                <textarea className=\"field min-h-[120px]\"></textarea>\r\n              ) : item.type === \"select\" ? (\r\n                <select className=\"field\">\r\n                  {item.options.map((option, index) => {\r\n                    let isSelected = false;\r\n                    if (item.label === \"Contact Preference\") {\r\n                      if (isMobile) {\r\n                        isSelected = index === 0;\r\n                      } else {\r\n                        isSelected = index === 1;\r\n                      }\r\n                    }\r\n                    return (\r\n                      <option key={index} selected={isSelected}>\r\n                        {option}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              ) : (\r\n                <input id={id} type={item.type} className=\"field\" />\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Many_Fields;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAClC,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,EACGD,MAAM,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC3B,MAAMC,EAAE,GAAGF,IAAI,CAACG,KAAK,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC;MACxD,oBACEZ,OAAA;QAAAK,QAAA,gBACEL,OAAA;UAAOa,OAAO,EAAEJ,EAAG;UAACK,SAAS,EAAC,OAAO;UAAAT,QAAA,EAClCE,IAAI,CAACG;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACRlB,OAAA;UAAKc,SAAS,EAAC,MAAM;UAAAT,QAAA,EAClBE,IAAI,CAACY,IAAI,KAAK,UAAU,gBACvBnB,OAAA;YAAUc,SAAS,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC,GACnDX,IAAI,CAACY,IAAI,KAAK,QAAQ,gBACxBnB,OAAA;YAAQc,SAAS,EAAC,OAAO;YAAAT,QAAA,EACtBE,IAAI,CAACa,OAAO,CAACd,GAAG,CAAC,CAACe,MAAM,EAAEb,KAAK,KAAK;cACnC,IAAIc,UAAU,GAAG,KAAK;cACtB,IAAIf,IAAI,CAACG,KAAK,KAAK,oBAAoB,EAAE;gBACvC,IAAIa,QAAQ,EAAE;kBACZD,UAAU,GAAGd,KAAK,KAAK,CAAC;gBAC1B,CAAC,MAAM;kBACLc,UAAU,GAAGd,KAAK,KAAK,CAAC;gBAC1B;cACF;cACA,oBACER,OAAA;gBAAoBwB,QAAQ,EAAEF,UAAW;gBAAAjB,QAAA,EACtCgB;cAAM,GADIb,KAAK;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CAAC;YAEb,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,gBAETlB,OAAA;YAAOS,EAAE,EAAEA,EAAG;YAACU,IAAI,EAAEZ,IAAI,CAACY,IAAK;YAACL,SAAS,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QACpD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GA5BEV,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6BV,CAAC;IAEV,CAAC;EAAC,gBACF,CAAC;AAEP,CAAC;AAACO,EAAA,GAxCItB,WAAW;AA0CjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}